{"version":3,"sources":["components/CharacterCar.js","components/CharacterList.js","services/getDataFromApi.js","components/Filters.js","components/CharacterDetail.js","Images/logo.png","services/localStorage.js","components/App.js","reportWebVitals.js","index.js"],"names":["CharacterCar","props","className","to","user","id","src","image","alt","name","title","species","CharacterList","users","length","userElement","map","getDataFromApi","fetch","then","response","json","data","results","status","origin","episode","Filters","onSubmit","ev","preventDefault","type","placeholder","onChange","handleFilter","value","target","key","CharacterDetail","objExpot","get","localStorage","getItem","JSON","parse","set","setItem","stringify","App","useState","setUsers","nameFilter","setNameFilter","useEffect","ls","filteredCharacters","filter","toUpperCase","includes","href","logo","exact","path","render","routerCharacterId","match","params","foundCharacter","find","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.37ed7db1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCar = (props) => {\r\n  return (\r\n    <li className=\"classlist\">\r\n      <Link to={`/character/${props.user.id}`}>\r\n        <img\r\n          className=\"card__img\"\r\n          src={props.user.image}\r\n          alt={`Foto de: ${props.user.name}`}\r\n          title={`Foto de: ${props.user.name}`}\r\n        />\r\n        <h2 className=\"filter__title\">{props.user.name}</h2>\r\n        <h3 className=\"filter__description\">{props.user.species}</h3>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CharacterCar;\r\n","import React from \"react\";\r\nimport CharacterCar from \"./CharacterCar\";\r\n\r\nconst CharacterList = (props) => {\r\n  if (props.users.length === 0) {\r\n    return (\r\n      <div className=\"problem_image\">\r\n        <img\r\n          src=\"https://media.giphy.com/media/YO45ydzTCoHdoR074O/giphy.gif\"\r\n          alt=\"gif rick y morty\"\r\n          title=\"rick y morty\"\r\n        />\r\n        Búsqueda undefined!!!!!\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const userElement = props.users.map((user) => {\r\n    return <CharacterCar key={user.id} user={user} />;\r\n  });\r\n\r\n  return (\r\n    <section className=\"filter__home\">\r\n      <ul className=\"class__list_ul\">{userElement}</ul>\r\n    </section>\r\n  );\r\n};\r\nexport default CharacterList;\r\n","const getDataFromApi = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      \r\n      return data.results.map((user) => {\r\n        return {\r\n          name: user.name,\r\n          id: user.id,\r\n          species: user.species,\r\n          status: user.status,\r\n          origin: user.origin.name,\r\n          episode: user.episode,\r\n          image: user.image,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React from \"react\";\r\n\r\nconst Filters = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"name\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"form__input-text\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Ric\"\r\n          id=\"name\"\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  const status = () => {\r\n    if (props.user.status === \"Alive\") {\r\n      return <li className=\"list-detail\">Status: {props.user.status} 👍</li>;\r\n    } else if (props.user.status === \"Dead\") {\r\n      return <li className=\"list-detail\">Status: {props.user.status} 👎</li>;\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"class__card\">\r\n      <img\r\n        className=\"card__img\"\r\n        src={props.user.image}\r\n        alt={`Foto de: ${props.user.name}`}\r\n        title={`Foto de: ${props.user.name}`}\r\n      />\r\n\r\n      <ul className=\"card__ul\">\r\n        <li className=\"card__name\">{props.user.name}</li>\r\n        <li>Especie: {props.user.species}</li>\r\n        <li>Status: {status()}</li>\r\n        <li>Origin: {props.user.origin}</li>\r\n        <li>Episodes: {props.user.episode.length}</li>\r\n      </ul>\r\n\r\n      <Link to=\"/\">\r\n        <span className=\"link__volver\">🛵...Volver</span>\r\n      </Link>\r\n    </section>\r\n  );\r\n};\r\nexport default CharacterDetail;\r\n","export default __webpack_public_path__ + \"static/media/logo.96b24c02.png\";","const get = (key) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst objExpot = {\r\n  get: get,\r\n  set: set,\r\n};\r\n\r\nexport default objExpot;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport CharacterList from \"./CharacterList\";\r\nimport getDataFromApi from \"../services/getDataFromApi\";\r\nimport Filters from \"./Filters\";\r\nimport CharacterDetail from \"./CharacterDetail\";\r\nimport \"../stylesheets/App.css\";\r\nimport logo from \"../Images/logo.png\";\r\nimport ls from \"../services/localStorage\";\r\n\r\nconst App = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getDataFromApi().then((data) => setUsers(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    ls.set(\"users\", users);\r\n  }, [users]);\r\n\r\n  //event handlers\r\n  const handleFilter = (data) => {\r\n    if (data.key === \"name\") {\r\n      setNameFilter(data.value);\r\n    }\r\n  };\r\n\r\n  const filteredCharacters = users.filter((user) => {\r\n    return user.name.toUpperCase().includes(nameFilter.toUpperCase());\r\n  });\r\n\r\n  const renderCharacterDetail = (props) => {\r\n    const routerCharacterId = props.match.params.id;\r\n    const foundCharacter = users.find((user) => {\r\n      return user.id == routerCharacterId;\r\n    });\r\n    if (foundCharacter !== undefined) {\r\n      return <CharacterDetail user={foundCharacter} />;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <div className=\"problem_image\">\r\n            <img\r\n              src=\"https://media.giphy.com/media/l378BzHA5FwWFXVSg/giphy.gif\"\r\n              alt=\"gif rick y morty\"\r\n              title=\"rick y morty\"\r\n            />\r\n            El personaje que buscas no existe!!!!\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>\r\n        <a href=\"http://localhost:3000/\">\r\n          <img\r\n            className=\"logo__img\"\r\n            src={logo}\r\n            alt=\"Ricky and Morty\"\r\n            title=\"Ricky and Morty\"\r\n          />\r\n        </a>\r\n      </h1>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Filters handleFilter={handleFilter} />\r\n          <CharacterList users={filteredCharacters} />\r\n        </Route>\r\n        <Route path=\"/character/:id\" render={renderCharacterDetail} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}